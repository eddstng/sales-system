generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model customers {
  id            Int      @id @default(autoincrement())
  name          String?  @db.VarChar(100)
  phone         String?  @unique @db.VarChar(15)
  unit_number   String?  @db.VarChar(5)
  street_number Int?
  street_name   String?  @db.VarChar(30)
  city          String?  @db.VarChar(15)
  buzzer_number String?  @db.VarChar(5)
  address       String?
  note          String?
  orders        orders[]
}

model items {
  id           Int            @id @default(autoincrement())
  menu_id      Int?
  price        Decimal?       @db.Decimal
  name_eng     String         @db.VarChar(100)
  name_chn     String         @default("") @db.VarChar(100)
  category     Int?
  special      Boolean?       @default(false)
  orders_items orders_items[]
}

model orders {
  id              Int            @id @default(autoincrement())
  number          Int?
  total           Decimal?       @db.Decimal
  subtotal        Decimal?       @db.Decimal
  gst             Decimal?       @db.Decimal
  discount        Decimal?       @db.Decimal
  timestamp       DateTime?      @default(now()) @db.Timestamp(6)
  type            Int?           @db.SmallInt
  void            Boolean        @default(false)
  paid            Boolean        @default(false)
  internal        Boolean        @default(false)
  internal_number Int?
  customizations  Json?
  customer_id     Int?
  customers       customers?     @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customers")
  orders_items    orders_items[]
}

model orders_items {
  id             Int       @id @default(autoincrement())
  quantity       Int?
  customizations Json?
  price          Decimal?  @db.Decimal
  custom_price   Decimal?  @db.Decimal
  custom_item_id String?   @db.VarChar(20)
  timestamp      DateTime? @db.Timestamp(6)
  item_id        Int?
  order_id       Int?
  items          items?    @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_items")
  orders         orders?   @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_orders")
}

model orders_history {
  order_id              Int       @id @default(autoincrement())
  order_number          Int?
  order_timestamp       DateTime? @default(now()) @db.Timestamp(6)
  order_type            Int?      @db.SmallInt
  order_total           Decimal?
  order_void            Boolean   @default(false)
  order_paid            Boolean   @default(false)
  order_internal        Boolean   @default(false)
  order_internal_number Int?
  customer_id           Int       @default(autoincrement())
  customer_name         String?   @db.VarChar(100)
  customer_phone        String?   @unique @db.VarChar(15)
}

model orders_items_detail {
  order_id                    Int       @id @default(autoincrement())
  order_number                Int?
  order_timestamp             DateTime? @default(now()) @db.Timestamp(6)
  order_type                  Int?      @db.SmallInt
  order_total                 Decimal
  order_subtotal              Decimal
  order_gst                   Decimal
  order_discount              Decimal
  order_void                  Boolean   @default(false)
  order_paid                  Boolean   @default(false)
  order_internal              Boolean   @default(false)
  order_internal_number       Int?
  order_customizations        Json?
  order_customizations_price  Int?      @default(0)   
  customer_id                 Int       @default(autoincrement())
  customer_name               String?   @db.VarChar(100)
  customer_phone              String?   @unique @db.VarChar(15)
  customer_address            String?
  customer_street_name        String?
  customer_street_number      Int?
  customer_unit_number        String?
  customer_buzzer_number      String?
  customer_note               String?
  item_id                     Int
  item_menu_id                Int?
  item_category               Int?
  item_name_eng               String?   @unique @db.VarChar(100)
  item_name_chn               String?   @unique @db.VarChar(100)
  item_price                  Decimal?
  item_custom_price           Decimal?
  item_custom_id              String?
  item_special                Boolean   @default(false)
  items_quantity_total        Int
  orders_items_quantity       Decimal?
  orders_items_customizations Json?
  orders_items_timestamp      DateTime? @db.Timestamp(6)
}
