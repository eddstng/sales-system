generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model customers {
  id            Int      @id @default(autoincrement())
  name          String?  @db.VarChar(100)
  phone         String?  @unique @db.VarChar(15)
  buzzer_number String?  @db.VarChar(5)
  unit_number   String?  @db.VarChar(5)
  street_number Int?
  street_name   String?  @db.VarChar(30)
  city          String?  @db.VarChar(15)
  address       String?
  note          String?
  orders        orders[]
}

model items {
  id           Int            @id @default(autoincrement())
  menu_id      Int?
  price        Float?
  name_eng     String?        @unique @db.VarChar(100)
  name_chn     String?        @unique @db.VarChar(100)
  category     Int?
  orders_items orders_items[]
}

model orders {
  id           Int            @id @default(autoincrement())
  total        Float?
  subtotal     Float?
  gst          Float?
  discount     Float?
  timestamp    DateTime?      @default(now()) @db.Timestamp(6)
  type         Int?           @db.SmallInt
  void         Boolean        @default(false)
  paid         Boolean        @default(false)
  customer_id  Int?
  customers    customers?     @relation(fields: [customer_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_customers")
  orders_items orders_items[]
}

model orders_items {
  id             Int       @id @default(autoincrement())
  quantity       Int?
  customizations Json?
  custom_price   Float?
  custom_name    String?   @db.VarChar(30)
  timestamp      DateTime? @db.Timestamp(6)
  item_id        Int?
  order_id       Int?
  items          items?    @relation(fields: [item_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_items")
  orders         orders?   @relation(fields: [order_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "fk_orders")
}

model orders_history {
  order_id        Int       @id @default(autoincrement())
  order_timestamp DateTime? @default(now()) @db.Timestamp(6)
  order_type      Int?      @db.SmallInt
  order_total     Float?
  order_void      Boolean   @default(false)
  order_paid      Boolean   @default(false)
  customer_id     Int       @default(autoincrement())
  customer_name   String?   @db.VarChar(100)
  customer_phone  String?   @unique @db.VarChar(15)
}

model orders_items_detail {
  order_id                    Int       @id @default(autoincrement())
  order_timestamp             DateTime? @default(now()) @db.Timestamp(6)
  order_type                  Int?      @db.SmallInt
  order_total                 Float
  order_subtotal              Float
  order_gst                   Float
  order_discount              Float
  order_void                  Boolean   @default(false)
  order_paid                  Boolean   @default(false)
  customer_id                 Int       @default(autoincrement())
  customer_name               String?   @db.VarChar(100)
  customer_phone              String?   @unique @db.VarChar(15)
  customer_address            String?
  customer_street_name        String?
  customer_street_number      Int?
  customer_unit_number        String?
  customer_buzzer_number      String?
  customer_note               String?
  item_id                     Int
  item_menu_id                Int?
  item_category               Int?
  item_name_eng               String?   @unique @db.VarChar(100)
  item_name_chn               String?   @unique @db.VarChar(100)
  item_custom_name            String?   @db.VarChar(30)
  item_price                  Float?
  items_quantity_total        Int
  orders_items_quantity       Int?
  orders_items_customizations Json?
  orders_items_timestamp      DateTime? @db.Timestamp(6)
}
